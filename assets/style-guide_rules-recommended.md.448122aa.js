import{_ as s,o as l,c as n,a}from"./app.4e3aa610.js";const p=JSON.parse('{"title":"우선순위 C 규칙: 권장","description":"","frontmatter":{},"headers":[{"level":2,"title":"컴포넌트/인스턴스 옵션 순서","slug":"component-instance-options-order","link":"#component-instance-options-order","children":[]},{"level":2,"title":"앨리먼트 속성 순서","slug":"element-attribute-order","link":"#element-attribute-order","children":[]},{"level":2,"title":"싱글 파일 컴포넌트 최상위 앨리먼트 순서","slug":"single-file-component-top-level-element-order","link":"#single-file-component-top-level-element-order","children":[]}],"relativePath":"style-guide/rules-recommended.md"}'),o={name:"style-guide/rules-recommended.md"},e=[a('<h1 id="priority-c-rules-recommended" tabindex="-1">우선순위 C 규칙: 권장 <a class="header-anchor" href="#priority-c-rules-recommended" aria-hidden="true">#</a></h1><p>똑같이 좋은 옵션이 여러 개 있는 경우 일관성을 유지하기 위해 임의로 선택할 수 있습니다. 이 규칙에서는 허용 가능한 각 옵션을 설명하고 기본 선택을 제안합니다. 즉, 일관성이 유지되고 타당한 이유가 있는 한 코드베이스에서 자유롭게 다른 선택을 할 수 있습니다. 하지만 정당한 이유가 있어야 합니다! 커뮤니티 표준에 적응하면 다음과 같은 이점이 있습니다:</p><ol><li>여러분이 접하는 대부분의 커뮤니티 코드를 더 쉽게 파싱할 수 있도록 두뇌를 훈련할 수 있습니다.</li><li>대부분의 커뮤니티 코드 예제를 수정하지 않고 복사하여 붙여넣을 수 있습니다.</li><li>적어도 Vue와 관련하여 선호하는 코딩 스타일에 이미 익숙한 신입 사원을 종종 찾을 수 있습니다.</li></ol><h2 id="component-instance-options-order" tabindex="-1">컴포넌트/인스턴스 옵션 순서 <a class="header-anchor" href="#component-instance-options-order" aria-hidden="true">#</a></h2><p><strong>컴포넌트/인스턴스 옵션은 일관된 순서로 정렬해야 합니다.</strong></p><p>이것이 컴포넌트 옵션에 권장하는 기본 순서입니다. 카테고리별로 구분되어 있으므로 플러그인에서 새 속성을 추가할 위치를 알 수 있습니다.</p><ol><li><p><strong>전역 인식</strong> (컴포넌트 이상의 지식이 필요합니다.)</p><ul><li><code>name</code></li></ul></li><li><p><strong>템플릿 컴파일러 옵션</strong> (템플릿 컴파일 방식을 변경합니다.)</p><ul><li><code>compilerOptions</code></li></ul></li><li><p><strong>템플릿 의존성</strong> (템플릿에 사용된 에셋)</p><ul><li><code>components</code></li><li><code>directives</code></li></ul></li><li><p><strong>컴포지션</strong> (속성을 옵션으로 병합합니다.)</p><ul><li><code>extends</code></li><li><code>mixins</code></li><li><code>provide</code>/<code>inject</code></li></ul></li><li><p><strong>인터페이스</strong> (컴포넌트에 대한 인터페이스)</p><ul><li><code>inheritAttrs</code></li><li><code>props</code></li><li><code>emits</code></li></ul></li><li><p><strong>컴포지션 API</strong> (컴포지션 API를 사용하기 위한 진입점)</p><ul><li><code>setup</code></li></ul></li><li><p><strong>로컬 상태</strong> (로컬 반응형 속성)</p><ul><li><code>data</code></li><li><code>computed</code></li></ul></li><li><p><strong>이벤트</strong> (반응형 이벤트에 의해 트리거되는 콜백)</p><ul><li><code>watch</code></li><li>생명 주기 이벤트(호출되는 순서대로) <ul><li><code>beforeCreate</code></li><li><code>created</code></li><li><code>beforeMount</code></li><li><code>mounted</code></li><li><code>beforeUpdate</code></li><li><code>updated</code></li><li><code>activated</code></li><li><code>deactivated</code></li><li><code>beforeUnmount</code></li><li><code>unmounted</code></li><li><code>errorCaptured</code></li><li><code>renderTracked</code></li><li><code>renderTriggered</code></li></ul></li></ul></li><li><p><strong>비 리액티브 속성</strong> (반응성 시스템과 무관한 인스턴스 속성)</p><ul><li><code>methods</code></li></ul></li><li><p><strong>렌더링</strong> (컴포넌트 출력에 대한 선언적 설명)</p><ul><li><code>template</code>/<code>render</code></li></ul></li></ol><h2 id="element-attribute-order" tabindex="-1">앨리먼트 속성 순서 <a class="header-anchor" href="#element-attribute-order" aria-hidden="true">#</a></h2><p><strong>앨리먼트(컴포넌트 포함)의 속성은 일관된 순서로 정렬해야 합니다.</strong></p><p>이것이 컴포넌트 옵션에 권장하는 기본 순서입니다. 컴포넌트 옵션은 카테고리로 나뉘어 있으므로 사용자 정의 속성과 지시문을 추가할 위치를 알 수 있습니다.</p><ol><li><p><strong>정의</strong> (컴포넌트 옵션을 제공합니다.)</p><ul><li><code>is</code></li></ul></li><li><p><strong>리스트 렌더링</strong> (동일한 앨리먼트의 여러 변형을 생성합니다.)</p><ul><li><code>v-for</code></li></ul></li><li><p><strong>조건부</strong> (앨리먼트 렌더링/표시 여부)</p><ul><li><code>v-if</code></li><li><code>v-else-if</code></li><li><code>v-else</code></li><li><code>v-show</code></li><li><code>v-cloak</code></li></ul></li><li><p><strong>렌더링 수정자</strong> (앨리먼트의 렌더링 방식을 변경합니다.)</p><ul><li><code>v-pre</code></li><li><code>v-once</code></li></ul></li><li><p><strong>글로벌 인식</strong> (컴포넌트 이상의 지식이 필요합니다.)</p><ul><li><code>id</code></li></ul></li><li><p><strong>유니크 속성</strong> (고유 값이 필요한 속성)</p><ul><li><code>ref</code></li><li><code>key</code></li></ul></li><li><p><strong>양방향 바인딩</strong> (바인딩과 이벤트 결합)</p><ul><li><code>v-model</code></li></ul></li><li><p><strong>다른 속성</strong> (지정되지 않은 모든 바인딩 및 언바인딩 속성)</p></li><li><p><strong>이벤트</strong> (컴포넌트 이벤트 리스너)</p><ul><li><code>v-on</code></li></ul></li><li><p><strong>컨텐츠</strong> (앨리먼트의 콘텐츠를 덮어씁니다.)</p><ul><li><code>v-html</code></li><li><code>v-text</code></li></ul></li></ol><p id="empty-lines-in-component-instance-options">##컴포넌트/인스턴스 옵션의 빈 줄</p><p><strong>여러 줄로 된 속성 사이에 빈 줄을 하나 추가하는 것이 좋습니다. 특히 스크롤하지 않으면 옵션이 화면에 더 이상 맞지 않는 경우</strong>.</p><p>컴포넌트가 비좁게 느껴지거나 읽기 어려운 경우 여러 줄의 속성 사이에 공백을 추가하면 다시 훑어보기가 쉬워집니다. Vim과 같은 일부 편집기에서는 이와 같은 서식 지정 옵션으로 키보드로 더 쉽게 탐색할 수 있습니다.</p><div class="style-example style-example-good"><h3>Good</h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#FFCB6B;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">required</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">focused</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Boolean</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">default</span><span style="color:#F07178;">: </span><span style="color:#FF9CAC;">false</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">icon</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span></span>\n<span class="line"><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">formattedValue</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">inputClasses</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// 컴포넌트가 여전히 읽기 쉽고 탐색하기 쉽다면 공백이 없어도 괜찮습니다.</span></span>\n<span class="line"><span style="color:#FFCB6B;">props</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">required</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">focused</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Boolean</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">default</span><span style="color:#F07178;">: </span><span style="color:#FF9CAC;">false</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">icon</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">String</span></span>\n<span class="line"><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#FFCB6B;">computed</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">formattedValue</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">inputClasses</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// ...</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div></div><h2 id="single-file-component-top-level-element-order" tabindex="-1">싱글 파일 컴포넌트 최상위 앨리먼트 순서 <a class="header-anchor" href="#single-file-component-top-level-element-order" aria-hidden="true">#</a></h2><p><strong><a href="/guide/scaling-up/sfc.html">싱글 파일 컴포넌트</a>는 항상 다른 두 태그 중 하나 이상이 항상 필요하므로 <code>&lt;script&gt;</code>, <code>&lt;template&gt;</code>, <code>&lt;style&gt;</code> 태그의 순서를 일관되게 유지하되 <code>&lt;style&gt;</code>을 마지막에 배치해야 합니다.</strong></p><div class="style-example style-example-bad"><h3>Bad</h3><div class="language-vue-html"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="language-vue-html"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">&lt;!-- ComponentA.vue --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;">&lt;!-- ComponentB.vue --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></div><div class="style-example style-example-good"><h3>Good</h3><div class="language-vue-html"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">&lt;!-- ComponentA.vue --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;">&lt;!-- ComponentB.vue --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><div class="language-vue-html"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">&lt;!-- ComponentA.vue --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;">&lt;!-- ComponentB.vue --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/* ... */</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div></div>',19)];const t=s(o,[["render",function(s,a,p,o,t,c){return l(),n("div",null,e)}]]);export{p as __pageData,t as default};
